{"ast":null,"code":"'use strict';\n\nconst urlRegex = require('url-regex-safe');\n\nconst normalizeUrl = require('normalize-url');\n\nconst getUrlsFromQueryParameters = url => {\n  const returnValue = new Set();\n  const {\n    searchParams\n  } = new URL(url.replace(/^(?:\\/\\/|(?:www\\.))/i, 'http://$2'));\n\n  for (const [, value] of searchParams) {\n    if (urlRegex({\n      exact: true\n    }).test(value)) {\n      returnValue.add(value);\n    }\n  }\n\n  return returnValue;\n};\n\nmodule.exports = function (text) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (typeof text !== 'string') {\n    throw new TypeError(`The \\`text\\` argument should be a string, got ${typeof text}`);\n  }\n\n  if (typeof options.exclude !== 'undefined' && !Array.isArray(options.exclude)) {\n    throw new TypeError('The `exclude` option must be an array');\n  }\n\n  const returnValue = new Set();\n\n  const add = url => {\n    try {\n      returnValue.add(normalizeUrl(url.trim().replace(/\\.+$/, ''), options));\n    } catch {}\n  };\n\n  const urls = text.match(urlRegex(options.requireSchemeOrWww === undefined ? undefined : {\n    strict: options.requireSchemeOrWww\n  })) || [];\n\n  for (const url of urls) {\n    add(url);\n\n    if (options.extractFromQueryString) {\n      const qsUrls = getUrlsFromQueryParameters(url);\n\n      for (const qsUrl of qsUrls) {\n        add(qsUrl);\n      }\n    }\n  }\n\n  for (const excludedItem of options.exclude || []) {\n    for (const item of returnValue) {\n      const regex = new RegExp(excludedItem);\n\n      if (regex.test(item)) {\n        returnValue.delete(item);\n      }\n    }\n  }\n\n  return returnValue;\n};","map":{"version":3,"names":["urlRegex","require","normalizeUrl","getUrlsFromQueryParameters","url","returnValue","Set","searchParams","URL","replace","value","exact","test","add","module","exports","text","options","TypeError","exclude","Array","isArray","trim","urls","match","requireSchemeOrWww","undefined","strict","extractFromQueryString","qsUrls","qsUrl","excludedItem","item","regex","RegExp","delete"],"sources":["C:/Users/sandy/Downloads/build-twitter-with-react/build-twitter-with-react/node_modules/get-urls/index.js"],"sourcesContent":["'use strict';\nconst urlRegex = require('url-regex-safe');\nconst normalizeUrl = require('normalize-url');\n\nconst getUrlsFromQueryParameters = url => {\n\tconst returnValue = new Set();\n\tconst {searchParams} = (new URL(url.replace(/^(?:\\/\\/|(?:www\\.))/i, 'http://$2')));\n\n\tfor (const [, value] of searchParams) {\n\t\tif (urlRegex({exact: true}).test(value)) {\n\t\t\treturnValue.add(value);\n\t\t}\n\t}\n\n\treturn returnValue;\n};\n\nmodule.exports = (text, options = {}) => {\n\tif (typeof text !== 'string') {\n\t\tthrow new TypeError(`The \\`text\\` argument should be a string, got ${typeof text}`);\n\t}\n\n\tif (typeof options.exclude !== 'undefined' && !Array.isArray(options.exclude)) {\n\t\tthrow new TypeError('The `exclude` option must be an array');\n\t}\n\n\tconst returnValue = new Set();\n\n\tconst add = url => {\n\t\ttry {\n\t\t\treturnValue.add(normalizeUrl(url.trim().replace(/\\.+$/, ''), options));\n\t\t} catch {}\n\t};\n\n\tconst urls = text.match(\n\t\turlRegex(options.requireSchemeOrWww === undefined ? undefined : {\n\t\t\tstrict: options.requireSchemeOrWww\n\t\t})\n\t) || [];\n\tfor (const url of urls) {\n\t\tadd(url);\n\n\t\tif (options.extractFromQueryString) {\n\t\t\tconst qsUrls = getUrlsFromQueryParameters(url);\n\t\t\tfor (const qsUrl of qsUrls) {\n\t\t\t\tadd(qsUrl);\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (const excludedItem of options.exclude || []) {\n\t\tfor (const item of returnValue) {\n\t\t\tconst regex = new RegExp(excludedItem);\n\t\t\tif (regex.test(item)) {\n\t\t\t\treturnValue.delete(item);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn returnValue;\n};\n"],"mappings":"AAAA;;AACA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,gBAAD,CAAxB;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,eAAD,CAA5B;;AAEA,MAAME,0BAA0B,GAAGC,GAAG,IAAI;EACzC,MAAMC,WAAW,GAAG,IAAIC,GAAJ,EAApB;EACA,MAAM;IAACC;EAAD,IAAkB,IAAIC,GAAJ,CAAQJ,GAAG,CAACK,OAAJ,CAAY,sBAAZ,EAAoC,WAApC,CAAR,CAAxB;;EAEA,KAAK,MAAM,GAAGC,KAAH,CAAX,IAAwBH,YAAxB,EAAsC;IACrC,IAAIP,QAAQ,CAAC;MAACW,KAAK,EAAE;IAAR,CAAD,CAAR,CAAwBC,IAAxB,CAA6BF,KAA7B,CAAJ,EAAyC;MACxCL,WAAW,CAACQ,GAAZ,CAAgBH,KAAhB;IACA;EACD;;EAED,OAAOL,WAAP;AACA,CAXD;;AAaAS,MAAM,CAACC,OAAP,GAAiB,UAACC,IAAD,EAAwB;EAAA,IAAjBC,OAAiB,uEAAP,EAAO;;EACxC,IAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;IAC7B,MAAM,IAAIE,SAAJ,CAAe,iDAAgD,OAAOF,IAAK,EAA3E,CAAN;EACA;;EAED,IAAI,OAAOC,OAAO,CAACE,OAAf,KAA2B,WAA3B,IAA0C,CAACC,KAAK,CAACC,OAAN,CAAcJ,OAAO,CAACE,OAAtB,CAA/C,EAA+E;IAC9E,MAAM,IAAID,SAAJ,CAAc,uCAAd,CAAN;EACA;;EAED,MAAMb,WAAW,GAAG,IAAIC,GAAJ,EAApB;;EAEA,MAAMO,GAAG,GAAGT,GAAG,IAAI;IAClB,IAAI;MACHC,WAAW,CAACQ,GAAZ,CAAgBX,YAAY,CAACE,GAAG,CAACkB,IAAJ,GAAWb,OAAX,CAAmB,MAAnB,EAA2B,EAA3B,CAAD,EAAiCQ,OAAjC,CAA5B;IACA,CAFD,CAEE,MAAM,CAAE;EACV,CAJD;;EAMA,MAAMM,IAAI,GAAGP,IAAI,CAACQ,KAAL,CACZxB,QAAQ,CAACiB,OAAO,CAACQ,kBAAR,KAA+BC,SAA/B,GAA2CA,SAA3C,GAAuD;IAC/DC,MAAM,EAAEV,OAAO,CAACQ;EAD+C,CAAxD,CADI,KAIR,EAJL;;EAKA,KAAK,MAAMrB,GAAX,IAAkBmB,IAAlB,EAAwB;IACvBV,GAAG,CAACT,GAAD,CAAH;;IAEA,IAAIa,OAAO,CAACW,sBAAZ,EAAoC;MACnC,MAAMC,MAAM,GAAG1B,0BAA0B,CAACC,GAAD,CAAzC;;MACA,KAAK,MAAM0B,KAAX,IAAoBD,MAApB,EAA4B;QAC3BhB,GAAG,CAACiB,KAAD,CAAH;MACA;IACD;EACD;;EAED,KAAK,MAAMC,YAAX,IAA2Bd,OAAO,CAACE,OAAR,IAAmB,EAA9C,EAAkD;IACjD,KAAK,MAAMa,IAAX,IAAmB3B,WAAnB,EAAgC;MAC/B,MAAM4B,KAAK,GAAG,IAAIC,MAAJ,CAAWH,YAAX,CAAd;;MACA,IAAIE,KAAK,CAACrB,IAAN,CAAWoB,IAAX,CAAJ,EAAsB;QACrB3B,WAAW,CAAC8B,MAAZ,CAAmBH,IAAnB;MACA;IACD;EACD;;EAED,OAAO3B,WAAP;AACA,CA3CD"},"metadata":{},"sourceType":"script"}